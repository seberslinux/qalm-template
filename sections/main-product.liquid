{% schema %}
{
  "name": "Product information",
  "tag": "section",
  "class": "product-section py-12",
  "blocks": [
    {
      "type": "title",
      "name": "Product title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant selector",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "Quantity selector",
      "limit": 1
    },
    {
      "type": "buy_buttons",
      "name": "Buy buttons",
      "limit": 1
    }
  ],
      "settings": [
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "Stacked"
        },
        {
          "value": "thumbnail",
          "label": "Thumbnails"
        },
        {
          "value": "thumbnail_slider",
          "label": "Thumbnail slider"
        }
      ],
      "default": "stacked",
      "label": "Image gallery layout"
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "default": true,
      "label": "Enable image zoom"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "Enable video looping"
    }
  ]
}
{% endschema %}

<div class="container mx-auto px-4 md:px-6">
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
    <!-- Product Images -->
    <div class="product-gallery">
      {% if product.media.size > 0 %}
        <div class="product-gallery__main mb-4">
          {% assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media %}
          <div class="product-gallery__image relative overflow-hidden">
            <img
              src="{{ featured_media | image_url: width: 1000 }}"
              alt="{{ featured_media.alt | escape }}"
              class="w-full h-auto object-cover {% if section.settings.enable_zoom %}cursor-zoom-in{% endif %}"
              loading="lazy"
              {% if section.settings.enable_zoom %}data-image-zoom="{{ featured_media | image_url: width: 1800 }}"{% endif %}
            />
          </div>
        </div>

        {% if product.media.size > 1 and section.settings.gallery_layout != "stacked" %}
          <div class="product-gallery__thumbnails grid grid-cols-5 gap-2">
            {% for media in product.media %}
              <div class="product-gallery__thumbnail cursor-pointer">
                <img
                  src="{{ media | image_url: width: 150 }}"
                  alt="{{ media.alt | escape }}"
                  class="w-full h-auto object-cover border {% if featured_media.id == media.id %}border-black{% else %}border-gray-200{% endif %}"
                  data-media-id="{{ media.id }}"
                  loading="lazy"
                />
              </div>
            {% endfor %}
          </div>
        {% endif %}

        {% if section.settings.gallery_layout == "stacked" %}
          <div class="product-gallery__stacked mt-4 space-y-4">
            {% for media in product.media %}
              {% unless media.id == featured_media.id %}
                <div class="product-gallery__image">
                  <img
                    src="{{ media | image_url: width: 1000 }}"
                    alt="{{ media.alt | escape }}"
                    class="w-full h-auto object-cover {% if section.settings.enable_zoom %}cursor-zoom-in{% endif %}"
                    loading="lazy"
                    {% if section.settings.enable_zoom %}data-image-zoom="{{ media | image_url: width: 1800 }}"{% endif %}
                  />
                </div>
              {% endunless %}
            {% endfor %}
          </div>
        {% endif %}
      {% else %}
        <div class="product-gallery__placeholder bg-gray-200 h-[600px] flex items-center justify-center">
          {{ 'product-1' | placeholder_svg_tag: 'w-1/2 h-1/2 text-gray-400' }}
        </div>
      {% endif %}
    </div>

    <!-- Product Info -->
    <div class="product-info">
      <div class="sticky top-24">
        <form method="post" action="/cart/add" id="product-form-{{ product.id }}" accept-charset="UTF-8" class="product-form" enctype="multipart/form-data">
          <input type="hidden" name="form_type" value="product">
          <input type="hidden" name="utf8" value="âœ“">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'title' %}
                <h1 class="text-3xl font-light mb-2">{{ product.title }}</h1>

              {% when 'price' %}
                <div class="mb-6">
                  <p class="text-xl text-gray-700">
                    {% if product.compare_at_price_max > product.price %}
                      <span class="line-through text-gray-500 mr-2">{{ product.compare_at_price | money }}</span>
                    {% endif %}
                    <span>{{ product.price | money }}</span>
                  </p>
                </div>

              {% when 'description' %}
                <div class="product-description mb-8 text-gray-600">
                  {{ product.description }}
                </div>

              {% when 'variant_selector' %}
                {% unless product.has_only_default_variant %}
                  <div class="product-variants mb-6">
                    {% for option in product.options_with_values %}
                      <div class="product-variant mb-4">
                        <label for="Option-{{ forloop.index0 }}-{{ product.id }}" class="block text-sm font-medium text-gray-700 mb-2">
                          {{ option.name }}
                        </label>
                        <select
                          id="Option-{{ forloop.index0 }}-{{ product.id }}"
                          class="w-full px-4 py-3 border border-gray-300 focus:border-black focus:outline-none"
                          name="options[{{ option.name | escape }}]"
                          data-option-index="{{ forloop.index0 }}"
                        >
                          {% for value in option.values %}
                            <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                    {% endfor %}
                  </div>
                {% endunless %}

              {% when 'quantity_selector' %}
                <div class="product-quantity mb-6">
                  <label for="Quantity-{{ product.id }}" class="block text-sm font-medium text-gray-700 mb-2">
                    Quantity
                  </label>
                  <div class="flex">
                    <button type="button" class="quantity-btn quantity-btn--decrease px-4 py-3 bg-gray-100 border border-gray-300">-</button>
                    <input
                      type="number"
                      id="Quantity-{{ product.id }}"
                      name="quantity"
                      value="1"
                      min="1"
                      class="w-20 text-center px-4 py-3 border-t border-b border-gray-300 focus:outline-none"
                    >
                    <button type="button" class="quantity-btn quantity-btn--increase px-4 py-3 bg-gray-100 border border-gray-300">+</button>
                  </div>
                </div>

              {% when 'buy_buttons' %}
                <div class="product-submit">
                  <button
                    type="submit"
                    name="add"
                    class="w-full py-3 bg-black text-white text-sm uppercase tracking-wider hover:bg-gray-800 transition-colors mb-4 {% unless product.available %}opacity-50 cursor-not-allowed{% endunless %}"
                    {% unless product.available %}disabled="disabled"{% endunless %}
                  >
                    {% if product.available %}
                      Add to Cart
                    {% else %}
                      Sold Out
                    {% endif %}
                  </button>
                  <div class="text-sm text-gray-500 mt-4">
                    <p>Free shipping on orders over $100</p>
                    <p>30-day easy returns</p>
                  </div>
                </div>
            {% endcase %}
          {% endfor %}
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quantity selector functionality
    const quantityInput = document.getElementById('Quantity-{{ product.id }}');
    const decreaseBtn = document.querySelector('.quantity-btn--decrease');
    const increaseBtn = document.querySelector('.quantity-btn--increase');

    if (quantityInput && decreaseBtn && increaseBtn) {
      decreaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
          quantityInput.value = currentValue - 1;
        }
      });

      increaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        quantityInput.value = currentValue + 1;
      });
    }

    // Thumbnail gallery functionality
    const thumbnails = document.querySelectorAll('.product-gallery__thumbnail img');
    const mainImage = document.querySelector('.product-gallery__main img');

    if (thumbnails.length > 0 && mainImage) {
      thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', function() {
          const mediaId = this.dataset.mediaId;
          const selectedMedia = {{ product.media | json }}.find(media => media.id == mediaId);
          
          if (selectedMedia) {
            mainImage.src = selectedMedia.preview_image.src;
            mainImage.alt = selectedMedia.alt || '';
            
            if (mainImage.dataset.imageZoom) {
              mainImage.dataset.imageZoom = selectedMedia.preview_image.src.replace('_1000x', '_1800x');
            }

            // Update active thumbnail border
            thumbnails.forEach(thumb => {
              if (thumb.dataset.mediaId == mediaId) {
                thumb.parentElement.classList.add('border-black');
                thumb.parentElement.classList.remove('border-gray-200');
              } else {
                thumb.parentElement.classList.remove('border-black');
                thumb.parentElement.classList.add('border-gray-200');
              }
            });
          }
        });
      });
    }

    // Image zoom functionality
    if ({{ section.settings.enable_zoom | json }}) {
      const zoomableImages = document.querySelectorAll('.product-gallery__image img[data-image-zoom]');
      
      zoomableImages.forEach(image => {
        image.addEventListener('click', function() {
          const zoomUrl = this.dataset.imageZoom;
          
          // Create modal
          const modal = document.createElement('div');
          modal.className = 'fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center';
          
          // Create zoomed image
          const zoomedImage = document.createElement('img');
          zoomedImage.src = zoomUrl;
          zoomedImage.className = 'max-w-[90%] max-h-[90%] object-contain';
          
          // Create close button
          const closeBtn = document.createElement('button');
          closeBtn.innerHTML = '&times;';
          closeBtn.className = 'absolute top-4 right-4 text-white text-4xl';
          closeBtn.onclick = function() {
            document.body.removeChild(modal);
          };
          
          // Add elements to modal
          modal.appendChild(zoomedImage);
          modal.appendChild(closeBtn);
          
          // Close on click outside image
          modal.addEventListener('click', function(e) {
            if (e.target === modal) {
              document.body.removeChild(modal);
            }
          });
          
          // Add modal to body
          document.body.appendChild(modal);
        });
      });
    }
  });
</script>